import static org.junit.Assert.*;

import java.util.ArrayList;

public class Test0{

	@org.junit.Test
	public void test() {
		
double[] inputs={};
int[] decision_inputs={1};
assertArrayEquals(new Programa(inputs,decision_inputs).get_result_bool(0,3),
				new Programa(inputs,decision_inputs).get_result_bool(0,3));
assertArrayEquals(new Programa(inputs,decision_inputs).get_result_bool(0,165),
				new Programa(inputs,decision_inputs).get_result_bool(0,165));
	assertArrayEquals(new Programa(inputs,decision_inputs).get_result_num(0,158),
				new Programa(inputs,decision_inputs).get_result_num(0,158),0);
}
}
